{"version":3,"sources":["../rr_md.js"],"names":["React","ReactDOM","PropTypes","Redux","createStore","applyMiddleware","bindActionCreators","combineReducers","compose","ReactRedux","Provider","connect","ReduxThunk","default","markedjs","marked","renderer","Renderer","link","href","title","text","setOptions","breaks","MarkdownPreview","markdown","props","changeMarkdown","event","target","value","html","handleChange","PureComponent","propTypes","string","isRequired","MarkdownEditor","rows","cols","number","func","MarkdownEditPreview","dangerouslySetInnerHTML","__html","MARKDOWN_CHANGE","replace","type","placeholder","defaultState","markdownReducer","state","action","reducer","md","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","mapStateToProps","actionCreators","mapDispatchToProps","dispatch","AppContainer","render","document","getElementById"],"mappings":"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","sourcesContent":["const React = React\nconst ReactDOM = ReactDOM\nconst PropTypes = PropTypes\nconst {\n  createStore,\n  applyMiddleware,\n  bindActionCreators,\n  combineReducers,\n  compose,\n} = Redux;\nconst { Provider, connect } = ReactRedux;\nconst ReduxThunk = ReduxThunk.default;\nconst markedjs = marked;\n\n// Return links with target=\"_blank\".\nconst renderer = new marked.Renderer();\nrenderer.link = function (href, title, text) {\n  return `<a target=\"_blank\" href=\"${href}\">${text}` + '</a>';\n}\n\n// Allow line-breaks on carriage-return and set renderer.\nmarkedjs.setOptions({\n  renderer: renderer,\n  breaks: true,\n});\n\n\n// Main Connected Container renders both Editor and Preview.\nclass MarkdownPreview extends React.PureComponent {\n  componentDidMount = () => {\n    const { markdown } = this.props\n    this.props.changeMarkdown(markdown)\n  }\n\n  handleChange = (event) => {\n    //event.preventDefault()\n    this.props.changeMarkdown(event.target.value)\n  }\n\n  render() {\n    const { markdown, html } = this.props\n    return (\n        <div id=\"wrapper\">\n          <MarkdownEditor className=\"Home-intro\"\n                          handleChange={this.handleChange}\n                          rows={25}\n                          cols={80}\n                          value={markdown}/>\n          <MarkdownEditPreview className=\"Home-intro\"\n                               html={html}/>\n        </div>\n    )\n  }\n}\n// PropTypes for MarkdownPreview.\nMarkdownPreview.propTypes = {\n  markdown: PropTypes.string.isRequired,\n  html: PropTypes.string.isRequired,\n};\n\n// Builds and returns the MarkdownEditor Textarea.\nconst MarkdownEditor = ({handleChange, rows, cols, value}) => {\n  return(\n      <div className=\"text-box\">\n        <div className=\"quote-text\">\n          <textarea id=\"editor\"\n                    rows={rows}\n                    cols={cols}\n                    onChange={handleChange}\n                    value={value} />\n        </div>\n      </div>\n  )};\n// PropTypes for MarkdownEditor.\nMarkdownEditor.MarkdownEditor = {\n  rows: PropTypes.number.isRequired,\n  cols: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\n// Builds and returns the MarkdownEditPreview Area.\nconst MarkdownEditPreview = ({html}) => {\n  const props = {\n    dangerouslySetInnerHTML: { __html: html },\n  };\n  return(\n      <div className=\"text-box\">\n        <div id=\"preview\" {...props} />\n      </div>\n  )};\n// PropTypes for MarkdownEditPreview.\nMarkdownEditPreview.propTypes = {\n  html: PropTypes.string.isRequired,\n};\n\n// Action(s).\nconst MARKDOWN_CHANGE = 'MARKDOWN_CHANGE'\n\n// Action Provider(s).\nconst changeMarkdown = (value) => {\n  let html = markedjs(value.replace(\"\\r\", '<br/>'))\n  return {\n    type: MARKDOWN_CHANGE,\n    markdown: value,\n    html: html,\n  }\n};\n\nconst placeholder =\n    `# Angues sanguine et hanc\n\n## Est omnia catulus succrescere fecit petentem fatis\n\nLorem markdownum harenosi; non Iris si, *sed* et praeterque lavere cingo\nAchilles dolisque ad Hodites educere alta spissisque? \nPorrigit est, me deae, litora pervia tecta auro saepe nefas, haec temptavit neu \nfacinus Atreus pedum, dant. \nLeones coniurataeque quae Munychiosque illum, defensamus levitate eo aequore est\ntot contigit ad aurea gentis unda silices, ad. Recursus peremptis scilicet\npulsis: aliquem tempestate nunc arceor; quae venas, ad illa, et facies! Reservet\ncommunem fessa, laudis et marmore, flamma et ait texique [feras inferni\nordine](https://www.freecodecamp.com/).\n\\`\\`\\`\n    if (cMultitasking <= sound_nosql_parity) {\n        server(59);\n        digitalSyntax.flaming(yottabyteBotnet(2), threadWarmPixel);\n    }\n    outbox_nat = unc_spam;\n    var rss_active_broadband = cron + malwareMouse + hexadecimalWiredSession;\n\\`\\`\\`\nSuperorum utque magnaque videntem altissima ab inque ruitis, an minimum ripam.\nMissis vultu precanda obsistere victoremque cupido [nata\nattulerat](https://codepen.io/timhagn/pen/eKoOyx) omnia, grandior. Sanguis falsi, \nquoque rastrorumque in varias, _laevum lacrimas_ et **tibi**! \n\\`<fragment></fragment>\\` ; ).\nQuies sus parabat tuos per ut **spicula** et **_aquarum_**, enim.\n\n> Tua per traiecit exitio novaeque odoratis convicia\n\nFulmine Aiacem terribili *est*. Quam nec spernit dominae .\n\nFulmine Header | Aiacem Header | Quam Header\n------------ | ------------- | ------------- \nterribili | est | nec\ncrevisse | vultu | dominae\n\nUnda versi [lenti](https://codepen.io/timhagn/pen/ERRjaR). \n* Unius laudisque quae vulnus pictis, dentes\n  * adflati alto misso imitantia. Umidus pictis pervidet onerosus\n    * vinclisque quaerit donec ponti lassavit pariterque: erat mea. \n1. Troianae pia gestu pallenti Scylla, fallacis conticuit ista; \n2. Argos unda nullamque abscidit quam regi, dant ossa\n3. Flectimur me **thalamos**, ubi auro fer Sinis\n4. iners Phlegon facibus obnoxius iuvenem perfida, vocem?\n\nProgenuit Mnemonidas munus, enim tulit, at etiam: taceam, creavit flammae\nostendit iustae omnes. Manus sacrilegos virtus et cuius palustri tecta spreta\ndigestum Aries; ille aderant frequens. Anxia femina, responderat **incerta\ncanori**. Et tutae si iamque, mori late vetito, ei agmine.\n\n![<th>](https://www.timhagn.com/images/th_logo.png)\n`\n\n// Set up defaultState.\nconst defaultState = {\n  markdown: placeholder,\n  html: '',\n};\n// Reducer - Fetches and returns quotes.\nconst markdownReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case MARKDOWN_CHANGE:\n      return {...state,\n        markdown: action.markdown,\n        html: action.html,\n      }\n    default:\n      return state\n  }\n};\n// Combine for easier access.\nconst reducer = combineReducers({\n  md: markdownReducer,\n});\n// Add Redux Dev-Tools if available.\nconst composeEnhancers = typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    || compose;\n// Create Store and set \"preloadedState\".\nconst store = createStore(\n    reducer,\n    {md: {...defaultState}},\n    composeEnhancers(\n        applyMiddleware(ReduxThunk)\n    )\n);\n\n// Extract Markdown & HTMl and map to props.\nconst mapStateToProps = (state, props) => ({ ...state.md })\n\n// \"Map\" action Creator(s).\nconst actionCreators = {\n  changeMarkdown,\n}\nconst mapDispatchToProps = (dispatch) => bindActionCreators(actionCreators, dispatch)\n\n// Connect and render.\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(MarkdownPreview)\n\nReactDOM.render(\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"file":"rr_md.js"}